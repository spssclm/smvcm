<?xml version="1.0" encoding="UTF-8"?>
<classpath>
        <!-- 含义：src/main/java属于源码，编译后放到target/classes目录下 -->
	<classpathentry kind="src" output="target/classes" path="src/main/java">
		<attributes>
			<attribute name="optional" value="true"/>
			<attribute name="maven.pomderived" value="true"/>
		</attributes>
	</classpathentry>
	<classpathentry excluding="**" kind="src" output="target/classes" path="src/main/resources">
		<attributes>
			<!-- 代表了配置是从POM.xml里来的，受maven管理，非maven项目可以去掉这个 -->
			<attribute name="maven.pomderived" value="true"/>
		</attributes>
	</classpathentry>
        <!-- 这里的including代表了目录下所有.java文件才会被处理，其他文件一概忽略，不会出现在target/test-classes目录下 -->
	<classpathentry kind="src" output="target/test-classes" path="src/test/java">
		<attributes>
			<attribute name="optional" value="true"/>
			<attribute name="maven.pomderived" value="true"/>
		</attributes>
	</classpathentry>
        <!-- 这里代表使用标准的JavaSE-1.6 JDK，相比来说如果用default和直接写当前系统中安装的JDK是不推荐的 -->
	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6">
		<attributes>
			<attribute name="maven.pomderived" value="true"/>
		</attributes>
	</classpathentry>
        <!-- 代表了Maven中的dependencies也都放到classpath里 -->
	<classpathentry kind="con" path="org.eclipse.m2e.MAVEN2_CLASSPATH_CONTAINER">
		<attributes>
			<attribute name="maven.pomderived" value="true"/>
		</attributes>
	</classpathentry>
        <!-- 统一的输出为target/classes -->
	<classpathentry kind="output" path="target/classes"/>
</classpath>
